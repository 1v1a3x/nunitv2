Release Notes for NUnit Iteration Release 2.2.2
December 7, 2004

This iteration release introduces several new features and fixes a number of bugs.

Users requiring a stable release with full documentation should continue to use the latest full release of NUnit 2.2.

Changes in NUnit 2.2.2

With this version of NUnit, all references from the core to the framework assembly have been removed. It is now possible to run tests built against older versions of the framework, either debug or release build.

The Assert class now provides an AreNotEqual method which gives an error if the two arguments are equal.

A StringAssert class has been added to the extensions assembly. It provides methods Contains, ContainsAny, StartsWith, EndsWith and AreEqualIgnoringCase.

The logic for each type of Assert is now been encapsulated in a class that implements the IAsserter interface. Asserter object instances are created for each individual assertion. This allows creating extended asserts by implementing new asserter classes. Several base classes are available for extension. The StringAssert class discussed above provides a model for making such extensions.

A PlatformAttribute has been added to allow running tests only on certain OS or runtime platforms.

Applications built with Visual Studio 2005 may now be debugged using NUnit. NUnit itself may now be built and debugged under Visual Studio 2005.

A PlatformAttribute may be applied to test fixtures or tests, causing the tests to be run only on certain platforms. This is still experimental and may change - see the source for documentation.

Trace output may be directed to standard output by setting TestContext.Tracing to true.

Visual Studio projects and solutions may now be opened by dragging them to the tree control.

The namespace hierarchy is no longer ignored, with only fixtures displayed, when nunit-gui was run with /fixture: plus a namespace argument.

The TipWindow displayed over the errors and failures tab in the gui was throwing an exception under certain conditions. This is fixed and further usability improvements have been made.

Solution files containing web applications now be loaded without an exception. The web application is ignored.

Solution files containing projects specified using UNC paths may now be loaded without an exception. As before, changes to security settings are required to enable loading tests from shares.

An error in one of the timing tests was corrected.

The xml results file now uses the correct standard format for date and time independent of the system culture.

Classes in the nunit.util assembly that were specific to either nunit-gui or nunit-console have been removed. As a result, nunit.util no longer refers to the Windows.Forms or System.Drawing assemblies. The classes are now in the nunit-gui-runner or nunit-console-runner assembly as appropriate.

The NAnt build scripts in each subdirectory are now directly executable for convenience in working on a single component and for testing the scripts themselves.

Further cases in which gui controls were being called on the wrong thread have been identified and corrected.

Changes in NUnit 2.2.1

Reorganized source code into separate components, each with associated tests. An NUnit project file is now provided to facilitate running all the tests together. Config files are provided for running the project and for each separate assembly.

Both the gui and console runners are now dlls for those who want to link them with their own programs. New exe projects simply reference the dlls and work just as before.

An experimental extensibility mechanism is now provided, which allows uses to create special types of test cases and suites, marked by their own attributes.

Code that fires events has been modified to ensure that controls are invoked on the correct thread. We believe this will solve many of the problems that occur when running tests under the VS 2005 debugger. However, we have not completed testing in this environment, so some problems may still be present.

The nunit.core.dll assembly is no longer registered in the GAC. An assembly resolution event handler is used to "inject" the current version of the core assembly into the user's appdomain. The nunit.framework.dll assembly continues to reside in the GAC for easier reference by user test assemblies.

The NAnt build has been revised to work with the new directory structure. It is now possible to use NAnt to build individual components and assemblies, without building the entire application. To do this, simply run NAnt in the individual directory. Note that you must ensure that any referenced assemblies have been built first.

Tests may now be run without the source code being present.

NUnit can now open Visual Studio 2005 projects and solutions.

Old style test cases ("Test....") are no longer recognized by default. A setting in the test config file may be used to allow their use on an assembly by assembly basis.

Added a protected constructor to Assert so those wanting to inherit from it may do so. 

Fixed a buffering problem that caused test case labels to appear out of synch with the test output. 

Fixed a problem causing shadow copies to appear in the root of the current drive if no config file was present or if the setting was not provided in the config file. 

Fixed a problem causing the console output tab to contain old data if the tab had not been selected during the prior test run. 

Fixed a number of problems with the tipwindow used to display error details that don't fit in the normal display area.

Fixed a problem whereby only the first of several selected tests run was expanded in the gui at completion of the run.

Further Documentation:

The included documentation has not changed substantially from NUnit 2.2. The following files in the doc directory provide additional information about changes in this iteration.
 * Installation.txt
 * TestConfig.txt
 * Extensibility.txt
