NUnit 2.2.1 Iteration Release - October 26, 2004

Test Config Files

This file supplements and - where applicable - replaces information in the NUnit 2.2 documentation.

Tests in NUnit may use a config file for the purpose of passing special test execution parameters to the NUnit core and to provide application settings for use by the tests and the classes being tested. Two different naming patterns are used to locate the appropriate config file for the tests being run:

  1. If the dll for a test assembly is being loaded directly, the config file must be named <TestAssembly>.dll.config.

  2. If a .nunit test project file, a Visual Studio project or a Visual Studio solution is being loaded, the config file must be named <Project>.config.

In either case, the file must be located in the same directory as what you are loading.

NOTE: We recognize now that this dual naming convention is a bit confusing and will attempt to correct the situation in the future.

Any user application settings in the config file should be structured just as they would normally appear in your actual applicaton's config file.

NUnit uses a special section group, which may contain two sections. In the following example, we specify all the available settings, so that you can see how they are used. In your own config file, you would normally omit any settings that you don't care about.

  <configSections>
    <sectionGroup name="NUnit">
      <section name="TestCaseBuilder" 
        type="System.Configuration.NameValueSectionHandler"/>
      <section name="TestRunner"
        type="System.Configuration.NameValueSectionHandler"/>
    </sectionGroup>
  </configSections>
  
  <NUnit>
    <TestCaseBuilder>
      <add key="OldStyleTestCases" value="true" />
    </TestCaseBuilder>
    <TestRunner>
      <add key="ApartmentState" value="MTA" />
      <add key="ThreadPriority" value="Normal" />
    </TestRunner>
  </NUnit>

Note that you only need to define the section group and the sections if you actually use them. 

OldStyleTestCases determines whether test methods starting "Test" will be recognized as tests. If not used, it defaults to false.

ApartmentState and ThreadPriority apply to the test runner thread, if a separate thread is used to run the tests. This is always the case using nunit-gui and also occurs under nunit-console if the /thread option is specified. ApartmentState may be set to MTA or STA. It defaults to Unspecified. ThreadPriority may be set to any of the enum values and defaults to Normal.