/********************************************************************************************************************
'
' Copyright (c) 2002, James Newkirk, Michael C. Two, Alexei Vorontsov, Philip Craig
'
' Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated 
' documentation files (the "Software"), to deal in the Software without restriction, including without limitation 
' the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and
' to permit persons to whom the Software is furnished to do so, subject to the following conditions:
'
' The above copyright notice and this permission notice shall be included in all copies or substantial portions 
' of the Software.
'
' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO
' THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
' AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
' CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
' DEALINGS IN THE SOFTWARE.
'
'*******************************************************************************************************************/
package NUnit.Samples;

import System.*;
import NUnit.Framework.Assertion;

/** @attribute NUnit.Framework.TestFixture() */
public class SimpleJSharpTest
{
	protected int fValue1;
	protected int fValue2;

	/** @attribute NUnit.Framework.SetUp() */
	public void Init()
	{
		fValue1 = 2;
		fValue2 = 3;
	}

	/** @attribute NUnit.Framework.Test() */
	public void Add() 
	{
		int result= fValue1 + fValue2;
		Assertion.AssertEquals("Expected Failure.",6,result);
	}

	/** @attribute NUnit.Framework.Test() */
	public void DivideByZero() 
	{
		int zero= 0;
		int result = 8/zero;
	}

	/** @attribute NUnit.Framework.Test() */
	public void Equals() 
	{
		Assertion.AssertEquals("Integer.",12, 12);
		Assertion.AssertEquals("Long.",new Long(12), new Long(13));
		Assertion.AssertEquals("Char.",'a', 'a');
		Assertion.AssertEquals("Integer Object Cast.",new Integer(12), new Integer(12));
            
		Assertion.AssertEquals("Expected Failure (Integer).", 12, 13);
		Assertion.AssertEquals("Expected Failure (Double).", 12.0, 11.99, 0.0);
	}

	/** @attribute NUnit.Framework.Test() */
	/** @attribute NUnit.Framework.Ignore("ignored test") */
	public void IgnoredTest()
	{
		throw new InvalidCastException();
	}
}